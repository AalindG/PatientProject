{"version":3,"sources":["d:/Work/INDx/project/PatientTracker/src/$_lazy_route_resource lazy","d:/Work/INDx/project/PatientTracker/src/app/app.component.css","d:/Work/INDx/project/PatientTracker/src/app/app.component.html","d:/Work/INDx/project/PatientTracker/src/app/app.component.ts","d:/Work/INDx/project/PatientTracker/src/app/app.module.ts","d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.css","d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.html","d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.ts","d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.css","d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.html","d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.ts","d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.css","d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.html","d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.ts","d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.css","d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.html","d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.ts","d:/Work/INDx/project/PatientTracker/src/app/services/discrete.service.ts","d:/Work/INDx/project/PatientTracker/src/app/services/patients.service.ts","d:/Work/INDx/project/PatientTracker/src/environments/environment.ts","d:/Work/INDx/project/PatientTracker/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* GLOBAL STYLES\\r\\n-------------------------------------------------- */\\r\\n/* Padding below the footer and lighter body text */\\r\\n\\r\\nbody {\\r\\n    padding-bottom: 10px;\\r\\n    color: #5a5a5a;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  /* CUSTOMIZE THE NAVBAR\\r\\n  -------------------------------------------------- */\\r\\n\\r\\n  .container1{\\r\\n    width: 90%;\\r\\n    margin-bottom: 0px;\\r\\n      \\r\\n  }\\r\\n  /* Special class on .container surrounding .navbar, used for positioning it into place. */\\r\\n  .navbar-wrapper {\\r\\n    position: absolute;\\r\\n    border-radius: 30px;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    left: 0;\\r\\n    z-index: 20;\\r\\n  }\\r\\n  \\r\\n  /* Flip around the padding for proper display in narrow viewports */\\r\\n  .navbar-wrapper > .container {\\r\\n    padding-right: 0;\\r\\n    padding-left: 0;\\r\\n  }\\r\\n  .navbar-wrapper .navbar {\\r\\n    padding-right: 15px;\\r\\n    padding-left: 15px;\\r\\n  }\\r\\n  .navbar-wrapper .navbar .container {\\r\\n    width: auto;\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 992px) {\\r\\n    .featurette-heading {\\r\\n      margin-top: 120px;\\r\\n    }\\r\\n  }\\r\\n  \", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container container1\\\">\\n\\n  <nav class=\\\"navbar navbar-inverse navbar-static-top\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n       \\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Project name</a>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]={exact:true}>\\n            <a href=\\\"#\\\">Home</a>\\n          </li>\\n          <li routerLink=\\\"/add\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]={exact:true}>\\n            <a href=\\\"#add\\\">Add</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\\n</div>\\n\\n<div class=\\\" container container1\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { FileSelectDirective, FileDropDirective } from 'ng2-file-upload';\n\nimport { AppComponent } from './app.component';\nimport { PatientListComponent } from './components/patient-list/patient-list.component';\nimport { PatientsService } from './services/patients.service';\nimport { DiscreteService } from './services/discrete.service';\nimport { PatientAddComponent } from './components/patient-add/patient-add.component';\nimport { HttpClient } from '@angular/common/http/src/client';\nimport { DiscreteDataComponent } from './components/discrete-data/discrete-data.component';\nimport { PatientUpdateComponent } from './components/patient-update/patient-update.component';\n\n\nconst allRoutes: Routes = [\n  { path: '', component: PatientListComponent},\n  { path: 'add', component: PatientAddComponent},\n  { path: 'update/:id', component: PatientUpdateComponent},\n  { path: '**', component: PatientListComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PatientListComponent,\n    PatientAddComponent,\n    DiscreteDataComponent,\n    PatientUpdateComponent,\n    FileSelectDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(allRoutes, {useHash: true}),\n    NgbModule,\n    Ng2SearchPipeModule,\n    Ng2OrderModule,\n    NgxPaginationModule\n  ],\n  providers: [PatientsService, DiscreteService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.css\n// module id = ../../../../../src/app/components/discrete-data/discrete-data.component.css\n// module chunks = main","module.exports = \"<p>\\n  discrete-data works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.html\n// module id = ../../../../../src/app/components/discrete-data/discrete-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DiscreteService } from '../../services/discrete.service';\n\n@Component({\n  selector: 'app-discrete-data',\n  templateUrl: './discrete-data.component.html',\n  styleUrls: ['./discrete-data.component.css']\n})\nexport class DiscreteDataComponent implements OnInit {\n\n  discrete: any;\n\n  constructor(private discreteData: DiscreteService) { }\n\n  ngOnInit() {\n    this.discreteData.getDiscreteData().subscribe(dataFromDB => {\n      console.log('discrete: ', dataFromDB);\n      this.discrete = dataFromDB;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/components/discrete-data/discrete-data.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.form-container {\\r\\n    position: relative;\\r\\n    /* width:80%; */\\r\\n    padding:3em;\\r\\n    text-align: center;\\r\\n    margin: 2em auto;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.x3{\\r\\n    margin-left: 30px;\\r\\n    width: 29.5%;\\r\\n}\\r\\n\\r\\n.x4{\\r\\n    margin-left: 30px;\\r\\n    width: 21.5%;\\r\\n}\\r\\n.heading{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    margin-left: 30px;\\r\\n    width: 93.5%;\\r\\n}\\r\\n\\r\\n.address{\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n    background: #f2edda;\\r\\n    padding: 7px;\\r\\n    font-size: .7em;\\r\\n    margin-top: 5px;\\r\\n    margin-bottom: 5px;\\r\\n    display: inline-block;\\r\\n    -webkit-animation: 2s alertAnim forwards;\\r\\n            animation: 2s alertAnim forwards;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    margin-top: 3rem;\\r\\n}\\r\\nh1 {\\r\\n    margin-bottom: 2rem;\\r\\n    font-weight:bold;\\r\\n    font-family:'Muli';\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\n\\r\\n@-webkit-keyframes alertAnim {\\r\\n    from {\\r\\n        opacity:0;\\r\\n        -webkit-transform: translateY(-10px);\\r\\n                transform: translateY(-10px);\\r\\n    }\\r\\n    to {\\r\\n        opacity:1;\\r\\n        -webkit-transform: translateY(0);\\r\\n                transform: translateY(0);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n@keyframes alertAnim {\\r\\n    from {\\r\\n        opacity:0;\\r\\n        -webkit-transform: translateY(-10px);\\r\\n                transform: translateY(-10px);\\r\\n    }\\r\\n    to {\\r\\n        opacity:1;\\r\\n        -webkit-transform: translateY(0);\\r\\n                transform: translateY(0);\\r\\n    }\\r\\n}   \\r\\n\\r\\n@media only screen and (max-width:1040px){\\r\\n    /* styles for browsers larger than 1040px; */\\r\\n    .x3, .x4, .text-box{\\r\\n        width: 80%;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.css\n// module id = ../../../../../src/app/components/patient-add/patient-add.component.css\n// module chunks = main","module.exports = \"<!-- <form action=\\\"/patient/add\\\" method=\\\"POST\\\" role=\\\"form\\\">\\r\\n    <legend>Add a new Patient</legend>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-md-offset-1 col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">First Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">Middle Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">Last Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-md-offset-1 col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">Date Of Birth</label>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">Social Security Number</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-3\\\">\\r\\n            <label for=\\\"\\\" class=\\\"pull-left\\\">Last Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Input field\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form> -->\\r\\n\\r\\n\\r\\n<!-- Reactive form Demo -->\\r\\n<div>\\r\\n    <form [formGroup]=\\\"rForm\\\" (ngSubmit)=\\\"addPatient(rForm.value)\\\" method=\\\"POST\\\" novalidate>\\r\\n        <div class=\\\"form-container\\\">\\r\\n            <legend class=\\\"heading\\\">Add a new Patient</legend>  \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">First Name</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"fname\\\" ngModel>\\r\\n                <!-- Validation for Name label -->\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['fname'].valid &&  rForm.controls['fname'].touched\\\">{{ titleAlert }}</div>\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['fname'].valid && (rForm.controls['fname'].dirty)\\\">Can't contain Numbers</div>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Middle Name</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"mname\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['mname'].valid && (rForm.controls['mname'].dirty)\\\">Can't contain Numbers</div>\\r\\n                </div>\\r\\n            <!-- </div> -->\\r\\n\\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Last Name</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"lname\\\">\\r\\n                    <!-- Validation for Name label -->\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['lname'].valid &&  rForm.controls['lname'].touched\\\">{{ titleAlert }}</div>\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['lname'].valid && (rForm.controls['lname'].dirty)\\\">Can't contain Numbers</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                    <label class=\\\"pull-left\\\">SSN</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"ssn\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['ssn'].valid && (rForm.controls['ssn'].dirty || rForm.controls['ssn'].touched)\\\">SSN should 10 digits, Only numbers allowed</div>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                    <label class=\\\"pull-left\\\">DoB</label>\\r\\n                    <input class=\\\"form-control date col-md-2\\\" type=\\\"date\\\" formControlName=\\\"dob\\\" [max]=\\\"dateToday\\\">\\r\\n                    <!-- Validation for label -->\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['dob'].valid && rForm.controls['dob'].touched\\\">{{ titleAlert }}</div>\\r\\n                </div> \\r\\n\\r\\n                <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                    <label class=\\\"pull-left\\\">Gender</label> \\r\\n                    <select class=\\\"form-control col-md-2\\\" formControlName=\\\"gender\\\">\\r\\n                        <option [value]=\\\"gender.attribute_value\\\"  *ngFor=\\\"let gender of genderArray\\\">\\r\\n                            {{ gender.attribute_value }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <!-- <input class=\\\"form-control col-md-2\\\" type=\\\"select\\\" formControlName=\\\"gender\\\"> -->\\r\\n                    <!-- Validation for label -->\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['gender'].valid && rForm.controls['gender'].touched\\\">{{ titleAlert }}</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                    <label class=\\\"pull-left\\\">Marital Status</label>\\r\\n                    <select class=\\\"form-control col-md-2\\\" formControlName=\\\"mstatus\\\">\\r\\n                        <option [value]=\\\"status.attribute_value\\\"  *ngFor=\\\"let status of maritalStatusArray\\\">\\r\\n                            {{ status.attribute_value }}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <!-- <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"mstatus\\\"> -->\\r\\n                    <!-- Validation for label -->\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['mstatus'].valid && rForm.controls['mstatus'].touched\\\">{{ titleAlert }}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <legend class=\\\"heading\\\">Contact Details</legend>\\r\\n            <!-- Address Bars -->\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-11 text-box\\\">\\r\\n                    <label class=\\\"pull-left\\\">Address1</label>\\r\\n                    <input class=\\\"form-control address\\\" formControlName=\\\"address1\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-11 text-box\\\">\\r\\n                    <label class=\\\"pull-left\\\">Address2</label>\\r\\n                    <input class=\\\"form-control address\\\" formControlName=\\\"address2\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                        <label class=\\\"pull-left\\\">City</label>\\r\\n                        <input list=\\\"hosting-plan\\\" formControlName=\\\"city\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\r\\n \\r\\n                        <datalist id=\\\"hosting-plan\\\">\\r\\n                            <option [value]='city' *ngFor=\\\"let city of cityArray\\\" >{{city}}</option>\\r\\n                        </datalist>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                        <label class=\\\"pull-left\\\">State</label>\\r\\n                        <input list=\\\"hosting-plan1\\\" formControlName=\\\"state\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\r\\n \\r\\n                        <datalist id=\\\"hosting-plan1\\\">\\r\\n                            <option [value]='state' *ngFor=\\\"let state of stateArray\\\" >{{state}}</option>\\r\\n                        </datalist>\\r\\n                        <!-- <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"city\\\"> -->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                        <label class=\\\"pull-left\\\">Country</label>\\r\\n                        <input list=\\\"hosting-plan2\\\" formControlName=\\\"country\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\r\\n \\r\\n                        <datalist id=\\\"hosting-plan2\\\">\\r\\n                            <option [value]='country' *ngFor=\\\"let country of countryArray\\\" >{{country}}</option>\\r\\n                        </datalist>\\r\\n                    </div>\\r\\n        \\r\\n    \\r\\n                    <div class=\\\"form-group col-md-2 x4\\\">\\r\\n                        <label class=\\\"pull-left\\\">Zip Code</label>\\r\\n                        <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"zip\\\">\\r\\n                        <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['zip'].valid && (rForm.controls['zip'].touched || rForm.controls['zip'].dirty)\\\">{{ titleAlert }}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Email</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"email\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['email'].valid && rForm.controls['email'].touched\\\">Invalid or empty email</div>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Phone</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['phone'].valid && (rForm.controls['phone'].touched || rForm.controls['phone'].dirty)\\\">{{ numberAlert }}</div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Fax</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"fax\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['fax'].valid && (rForm.controls['fax'].touched || rForm.controls['fax'].dirty)\\\">{{ numberAlert }}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Username</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"username\\\">\\r\\n                <!-- Validation for Name label -->\\r\\n                    <div class=\\\"alert pull-left\\\" \\r\\n                        *ngIf=\\\"!rForm.controls['username'].valid && (rForm.controls['username'].dirty || rForm.controls['username'].touched)\\\">\\r\\n                        <span *ngIf=\\\"rForm.controls['username'].errors['unique']\\\">Username already exists. Enter a new one</span>\\r\\n                        <span *ngIf=\\\"rForm.controls['username'].errors['required']\\\">{{ titleAlert }}</span>\\r\\n                        \\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"alert pull-left\\\" *ngIf=\\\"\\\">{{ messageExistence }}</div> -->\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <label class=\\\"pull-left\\\">Password</label>\\r\\n                    <input class=\\\"form-control col-md-2\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\r\\n                    <div class=\\\"alert pull-left\\\" *ngIf=\\\"!rForm.controls['password'].valid && rForm.controls['password'].touched\\\">specify a password that's at least 8 characters.</div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                    <!-- <form action=\\\"/upload/picture\\\" method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\"> -->\\r\\n                        <label class=\\\"pull-left\\\">Picture</label>\\r\\n                        <input class=\\\"form-control col-md-2\\\" type=\\\"file\\\" name=\\\"picture\\\" ng2FileSelect [uploader]=\\\"uploader\\\" accept=\\\"image/*\\\" disabled>\\r\\n                        <!-- <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"submit\\\" \\r\\n                                (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">  -->\\r\\n                    <!-- </form> -->\\r\\n                </div>\\r\\n\\r\\n                    <!-- <div class=\\\"form-group col-md-3 x3\\\">\\r\\n                        <label class=\\\"pull-left\\\">Photo</label>\\r\\n                        <input class=\\\"form-control col-md-2\\\" type=\\\"file\\\" name=\\\"myPicture\\\" formControlName=\\\"photo\\\">\\r\\n                    </div> -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n              <input type=\\\"submit\\\" class=\\\"btn btn-primary col-lg-6 col-md-push-3\\\" style=\\\"margin-top: 20px;margin-bottom: 50px\\\" value=\\\"Submit Form\\\" [disabled]=\\\"!rForm.valid\\\" onclick=\\\"window.location.reload()\\\">\\r\\n              <br>\\r\\n        </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  \\r\\n  <!-- <ng-template #forminfo>\\r\\n    <div class=\\\"form-container\\\">\\r\\n      <div class=\\\"row columns\\\">\\r\\n          <h1>{{ fname }}</h1>\\r\\n  \\r\\n          <p>{{ address1 }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template> -->\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.html\n// module id = ../../../../../src/app/components/patient-add/patient-add.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DiscreteService } from '../../services/discrete.service';\nimport { FormBuilder, FormGroup, FormControl,  Validators } from '@angular/forms';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/Rx';\nimport { Router } from '@angular/router';\nimport { PatientsService } from '../../services/patients.service';\nimport { FileUploader } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-patient-add',\n  templateUrl: './patient-add.component.html',\n  styleUrls: ['./patient-add.component.css']\n})\nexport class PatientAddComponent implements OnInit {\n\n  rForm: FormGroup;\n  post: any;                     // A property for our submitted form\n  patient: Patient;\n  titleAlert: String = 'This field is required'; // Error message: required\n  numberAlert = 'Only numbers allowed.'; // // Error message: Numbers allowed\n  discrete: any;\n  validateExistence: boolean;\n  messageExistence: string;\n  usernameArray: string[] = [];\n  genderArray: string[];\n  maritalStatusArray: string[];\n  cityArray: string[] = [];\n  stateArray: string[] = [];\n  countryArray: string[] = [];\n  public dateToday = new Date().toJSON().split('T')[0]; // Get only date.\n\n  // File upload\n  public uploader: FileUploader = new FileUploader({url: 'http://localhost:3000/upload/picture'});\n\n\n  constructor(public http: Http, public patientService: PatientsService,\n              private fb: FormBuilder, private router: Router,\n              private discreteData: DiscreteService) {\n\n    // Initialize form with validations and default values\n    this.rForm = fb.group({\n      'fname' : [null, Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z]*$/)])],\n      'mname' : [null, Validators.pattern(/^[a-zA-Z]*$/)],\n      'lname' : [null, Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z]*$/)])],\n      'address1' : [null],\n      'address2' : [null],\n      'ssn' : [null, Validators.compose([Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^\\d+$/)])],\n      'dob' : [null, Validators.required],\n      'gender' : [null, Validators.required],\n      'mstatus' : [null, Validators.required],\n      'city' : [null],\n      'state' : [null],\n      'country' : [null],\n      'zip' : [null, Validators.pattern(/^\\d+$/)],\n      'email':  [null,  Validators.compose([Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)])],\n      'phone' : [null, Validators.pattern(/^\\d+$/)],\n      'fax' : [null, Validators.pattern(/^\\d+$/)],\n      'username' : [null, Validators.compose([Validators.required, this.usernameUnique.bind(this)])],\n      'password' : [null, Validators.compose([Validators.required, Validators.minLength(8)])],\n      'photo' : [null]\n      // 'validate' : ''\n    });\n  }\n\n  addPatient(post) {\n\n    // console.log('post: ', post);\n    this.patient = post;\n    // console.log('patient: ', JSON.stringify(this.patient));\n\n    const headers = new Headers();\n    // headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    headers.append('Content-Type', 'application/json');\n\n    // Add new city to DB\n    if (!this.cityArray.includes(post.city)) {\n    // if (this.cityArray.map(function(item){ return item.toLowerCase()}).indexOf(post.city.toLowerCase()) != -1) {\n      let city = {city: post.city};\n      // console.log('postCity: ', city);\n      this.http.post('http://localhost:3000/discrete-data/add/city', JSON.stringify(city), {headers: headers})\n        .subscribe(res => console.log('addcity: ', res));\n    }\n\n    // Add state to DB\n    if (!this.stateArray.includes(post.state)) {\n      let state = {state: post.state};\n      // console.log('postState: ', state);\n      this.http.post('http://localhost:3000/discrete-data/add/state', JSON.stringify(state), {headers: headers})\n        .subscribe(res =>  console.log('addstate: ', res));\n    }\n\n    // Add city to DB\n    if (!this.countryArray.includes(post.country)) {\n      let country = {country: post.country};\n      // console.log('postcountry: ', country);\n      this.http.post('http://localhost:3000/discrete-data/add/country', JSON.stringify(country), {headers: headers})\n        .subscribe(res => console.log('addcountry: ', res));\n    }\n\n    // Add Patient\n    const url = 'http://localhost:3000/add/patient';\n    this.http.post(url, JSON.stringify(this.patient), {headers: headers})\n      .subscribe(res =>  console.log('Here!: ', res));\n\n      alert('Patient added Successfully!');\n      this.router.navigate(['#/']);\n\n    }\n\n\n  ngOnInit() {\n\n      this.discreteData.getDiscreteData().subscribe(dataFromDB => {\n        this.discrete = dataFromDB;\n\n        // fetching genders from DB\n        this.genderArray = this.discrete.filter(val => {\n            return val.attribute_name === 'GENDER' ? val.attribute_value : '';\n        });\n\n        // Fetch Marital status\n        this.maritalStatusArray = this.discrete.filter(val => {\n          return val.attribute_name === 'MARITAL STATUS' ? val.attribute_value : '';\n      });\n        // Fetch City, State, Country\n        for (let i = 0; i < this.discrete.length ; i++) {\n          if (this.discrete[i].attribute_name === 'CITY_LIST') {\n            this.cityArray.push(this.discrete[i].attribute_value);\n          }\n          if (this.discrete[i].attribute_name === 'STATE_LIST') {\n            this.stateArray.push(this.discrete[i].attribute_value);\n          }\n          if (this.discrete[i].attribute_name === 'COUNTRY_LIST') {\n            this.countryArray.push(this.discrete[i].attribute_value);\n          }\n        }\n      });\n      // Fetch patients to compare usernames \n      this.patientService.getPatients()\n          .subscribe(dataFromDB => {\n            dataFromDB.forEach(element => {\n              this.usernameArray.push(element.user_name);\n              // console.log('username: ', element.user_name);\n            });\n          });\n\n    }\n\n    // Custom validator to check if username exists\n    usernameUnique(control: FormControl): {[s: string]: boolean} {\n      let flagCheck = false;\n      if(this.usernameArray.includes(control.value)){\n        return {'unique': true}\n      }\n      return null;\n    }\n\n  }\n\n  interface Patient {\n    address1: string;\n    address2: string;\n\n    fname: string;\n    mname: string;\n    lname: string;\n\n    ssn: number;\n    dob: string;\n    gender: string;\n    mstatus: string;\n\n    city: string;\n    state: string;\n    country: string;\n    zip: number;\n\n    email: string;\n    phone: number;\n    fax: number;\n\n    username: string;\n    password: string;\n    photo: string;\n  }\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-add/patient-add.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel {\\r\\n    overflow: auto;\\r\\n}\\r\\nspan:hover, th {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nspan{\\r\\n    padding: 5px;   \\r\\n    margin: 2px;\\r\\n}\\r\\n\\r\\n.search{\\r\\n    width: 40%;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\\r\\na{\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n}\\r\\n.buttonInv{\\r\\n    background-color: Transparent;\\r\\n    background-repeat:no-repeat;\\r\\n    border: none;\\r\\n    cursor:pointer;\\r\\n    overflow: hidden;\\r\\n    outline:none;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n}\\r\\n.edit{\\r\\n    color: blue;\\r\\n}\\r\\n table {\\r\\n    border: 1px solid #ccc;\\r\\n    border-collapse: collapse;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  table th {\\r\\n    font-size: .85em;\\r\\n    letter-spacing: .1em;\\r\\n    text-transform: uppercase;\\r\\n  }\\r\\n\\r\\n@media screen and (max-width: 760px),\\r\\n(min-device-width: 768px) and (max-device-width: 1024px)  {\\r\\n\\r\\n    table {\\r\\n        border: 0;\\r\\n    }\\r\\n    .buttonInv{\\r\\n        background-color: Transparent;\\r\\n        background-repeat:no-repeat;\\r\\n        border: none;\\r\\n        cursor:pointer;\\r\\n        overflow: hidden;\\r\\n        outline:none;\\r\\n        border-bottom: 1px solid #ddd;\\r\\n    }\\r\\n    table thead {\\r\\n        border: none;\\r\\n        clip: rect(0 0 0 0);\\r\\n        height: 1px;\\r\\n        margin: -1px;\\r\\n        overflow: hidden;\\r\\n        padding: 0;\\r\\n        position: absolute;\\r\\n        width: 1px;\\r\\n    }\\r\\n    table tr, .last {\\r\\n        border-bottom: 5px solid rgb(180, 177, 177);\\r\\n        display: block;\\r\\n        margin-bottom: .625em;\\r\\n    }\\r\\n    table td {\\r\\n        border-bottom: 1px solid rgb(180, 177, 177);\\r\\n        display: block;\\r\\n        font-size: .8em;\\r\\n        text-align: right;\\r\\n    }\\r\\n    table td:before {\\r\\n        content: attr(data-label);\\r\\n        float: left;\\r\\n        font-weight: bold;\\r\\n        text-transform: uppercase;\\r\\n    }\\r\\n    table td:last-child {\\r\\n        border-bottom: 0;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.css\n// module id = ../../../../../src/app/components/patient-list/patient-list.component.css\n// module chunks = main","module.exports = \"<div>\\n        <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-body\\\" style=\\\"height:0.7em;\\\">\\n                    <a href=\\\"#add\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm pull-right\\\">Add Patient<span class=\\\"glyphicon glyphicon-plus\\\"></span></button></a>\\n                        <div class=\\\"form-group pull-left search\\\">\\n                            <input type=\\\"text\\\" placeholder=\\\"Search\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" class=\\\"form-control\\\">\\n                        </div>\\n                        <span class=\\\"glyphicon glyphicon-search\\\"></span>\\n                </div>\\n              \\n                <!-- Table -->\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th  scope=\\\"col\\\" (click)=\\\"sort('patient_id')\\\">PUID\\n                                <span class=\\\"glyphicon\\\" *ngIf=\\\"key =='patient_id'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('name')\\\">Name\\n                                <span class=\\\"glyphicon\\\" *ngIf=\\\"key =='name'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('ssn')\\\">SSN#\\n                                <span class=\\\"glyphicon nope\\\" *ngIf=\\\"key =='ssn'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('dob')\\\">DOB\\n                                <span class=\\\"glyphicon nope\\\" *ngIf=\\\"key =='dob'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('gender')\\\">Gender\\n                                <span class=\\\"glyphicon nope\\\" *ngIf=\\\"key =='gender'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('email')\\\">Email\\n                                <span class=\\\"glyphicon\\\" *ngIf=\\\"key =='email'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('marital_status')\\\">Marital Status\\n                                <span class=\\\"glyphicon nope\\\" *ngIf=\\\"key =='marital_status'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('city')\\\">City\\n                                <span class=\\\"glyphicon\\\" *ngIf=\\\"key =='city'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th (click)=\\\"sort('phone')\\\">Phone\\n                                <span class=\\\"glyphicon\\\" *ngIf=\\\"key =='phone'\\\" [ngClass]=\\\"{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}\\\"></span>\\n                            </th>\\n                            <th>Edit</th>\\n                            <th>Delete</th>\\n                        </tr>\\n                    </thead>    \\n                        <tr *ngFor=\\\"let patient of patients | orderBy: key : reverse | filter: filter | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n                            <td data-label=\\\"PUID\\\">{{ patient.patient_id }}</td>\\n                            <td data-label=\\\"Name\\\"> {{patient.name}} {{patient.lname}} </td>\\n                            <td data-label=\\\"SSN\\\"> {{patient.ssn}} </td>\\n                            <td data-label=\\\"DOB\\\"> {{patient.dob | date: 'dd/MM/yyyy'}} </td>\\n                            <td data-label=\\\"Gender\\\"> {{patient.gender}} </td>\\n                            <td data-label=\\\"Email\\\"> {{patient.email}} </td>\\n                            <td data-label=\\\"Marital Status\\\"> {{patient.marital_status}} </td>\\n                            <td data-label=\\\"City\\\"> {{patient.city}} </td>\\n                            <td data-label=\\\"Phone\\\"> {{patient.phone}} </td>\\n                            <td data-label=\\\"Edit\\\"><button class=\\\"btn btn-default buttonInv\\\" [routerLink]=\\\"['/update', patient.patient_id]\\\"><span class=\\\"glyphicon glyphicon-edit\\\" ></span></button></td>\\n                            <td class=\\\"last\\\" data-label=\\\"Delete\\\"><button class=\\\"btn btn-default buttonInv\\\" (click)=\\\"removePatient(patient)\\\" onclick=\\\"window.location.reload()\\\"><span class=\\\"glyphicon glyphicon-trash\\\" ></span></button></td>\\n                        </tr>\\n                </table>\\n                <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n            </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.html\n// module id = ../../../../../src/app/components/patient-list/patient-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PatientsService } from '../../services/patients.service';\nimport { DiscreteService } from '../../services/discrete.service';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n\n  patients: any;\n  key: string = 'patient_id'; // Key to sort, default sort by PU_ID\n  reverse: boolean = false;\n  p: number = 1; // initializing pagination to one\n\n  constructor(private http: Http, private patient: PatientsService) {\n   }\n\n  ngOnInit() {\n\n    this.patient.getPatients().subscribe(patientsFromDB => {\n      // console.log('patients: ', patientsFromDB);\n      this.patients = patientsFromDB;\n    });\n  }\n\n  // sorting\n  sort(key) {\n    this.key = key;\n    this.reverse = !this.reverse;\n  }\n\n  removePatient(pat) {\n    // // console.log('id', pat.patient_id);\n    if (confirm('Are you sure you want to delete this?')) {\n      const url = 'http://localhost:3000/delete/' + pat.patient_id;\n      this.http.delete(url).subscribe(result => console.log(result));\n      alert('Deleted Successfully!');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-list/patient-list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.form-container {\\r\\n    position: relative;\\r\\n    /* width:80%; */\\r\\n    padding:3em;\\r\\n    text-align: center;\\r\\n    margin: 2em auto;\\r\\n    background: white;\\r\\n    border-radius: 10px;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.x3{\\r\\n    margin-left: 30px;\\r\\n    width: 29.5%;\\r\\n}\\r\\n\\r\\n.x4{\\r\\n    margin-left: 30px;\\r\\n    width: 21.5%;\\r\\n}\\r\\n.heading{\\r\\n    margin-top: 25px;\\r\\n}\\r\\n\\r\\n.text-box{\\r\\n    margin-left: 30px;\\r\\n    width: 93.5%;\\r\\n}\\r\\n\\r\\n.address{\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n    background: #f2edda;\\r\\n    padding: 7px;\\r\\n    font-size: .7em;\\r\\n    margin-top: 5px;\\r\\n    margin-bottom: 5px;\\r\\n    display: inline-block;\\r\\n    -webkit-animation: 2s alertAnim forwards;\\r\\n            animation: 2s alertAnim forwards;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    margin-top: 3rem;\\r\\n}\\r\\nh1 {\\r\\n    margin-bottom: 2rem;\\r\\n    font-weight:bold;\\r\\n    font-family:'Muli';\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\n\\r\\n@-webkit-keyframes alertAnim {\\r\\n    from {\\r\\n        opacity:0;\\r\\n        -webkit-transform: translateY(-10px);\\r\\n                transform: translateY(-10px);\\r\\n    }\\r\\n    to {\\r\\n        opacity:1;\\r\\n        -webkit-transform: translateY(0);\\r\\n                transform: translateY(0);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n@keyframes alertAnim {\\r\\n    from {\\r\\n        opacity:0;\\r\\n        -webkit-transform: translateY(-10px);\\r\\n                transform: translateY(-10px);\\r\\n    }\\r\\n    to {\\r\\n        opacity:1;\\r\\n        -webkit-transform: translateY(0);\\r\\n                transform: translateY(0);\\r\\n    }\\r\\n}   \\r\\n\\r\\n@media only screen and (max-width:1040px){\\r\\n    /* styles for browsers larger than 1040px; */\\r\\n    .x3, .x4, .text-box{\\r\\n        width: 80%;\\r\\n    }\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.css\n// module id = ../../../../../src/app/components/patient-update/patient-update.component.css\n// module chunks = main","module.exports = \"<!-- Form -->\\n<div>\\n  <form [formGroup]=\\\"updateForm\\\" (ngSubmit)=\\\"updatePatient(updateForm.value)\\\" method=\\\"POST\\\">\\n      <div class=\\\"form-container\\\">\\n          <legend class=\\\"heading\\\">Update Patient</legend>  \\n          <input type=\\\"hidden\\\" formControlName=\\\"id\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">First Name</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"fname\\\">\\n              <!-- Validation for Name label -->\\n              <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['fname'].valid &&  updateForm.controls['fname'].touched\\\">{{ titleAlert }}</div>\\n              <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['fname'].valid && (updateForm.controls['fname'].dirty)\\\">Can't contain Numbers</div>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Middle Name</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"mname\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['mname'].valid && (updateForm.controls['fname'].dirty)\\\">Can't contain Numbers</div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Last Name</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"lname\\\">\\n                  <!-- Validation for Name label -->\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['lname'].valid &&  updateForm.controls['lname'].touched\\\">{{ titleAlert }}</div>\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['lname'].valid && (updateForm.controls['lname'].dirty)\\\">Can't contain Numbers</div>\\n              </div>\\n          </div>\\n          \\n          <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-2 x4\\\">\\n                  <label class=\\\"pull-left\\\">SSN</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"ssn\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['ssn'].valid && (updateForm.controls['ssn'].dirty || updateForm.controls['ssn'].touched)\\\">SSN should 10 digits, Only numbers allowed</div>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-2 x4\\\">\\n                  <label class=\\\"pull-left\\\">DoB</label>\\n                  <input class=\\\"form-control date col-md-2\\\" type=\\\"date\\\" formControlName=\\\"dob\\\" [max]=\\\"dateToday\\\">\\n                  <!-- Validation for label -->\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['dob'].valid && updateForm.controls['dob'].touched\\\">{{ titleAlert }}</div>\\n              </div> \\n\\n              <div class=\\\"form-group col-md-2 x4\\\">\\n                  <label class=\\\"pull-left\\\">Gender</label> \\n                  <select class=\\\"form-control col-md-2\\\" formControlName=\\\"gender\\\">\\n                      <option [value]=\\\"gender.attribute_value\\\"  *ngFor=\\\"let gender of genderArray\\\">\\n                          {{ gender.attribute_value }}\\n                      </option>\\n                  </select>\\n                  <!-- <input class=\\\"form-control col-md-2\\\" type=\\\"select\\\" formControlName=\\\"gender\\\"> -->\\n                  <!-- Validation for label -->\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['gender'].valid && updateForm.controls['gender'].touched\\\">{{ titleAlert }}</div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-2 x4\\\">\\n                  <label class=\\\"pull-left\\\">Marital Status</label>\\n                  <select class=\\\"form-control col-md-2\\\" formControlName=\\\"mstatus\\\">\\n                      <option [value]=\\\"status.attribute_value\\\"  *ngFor=\\\"let status of maritalStatusArray\\\">\\n                          {{ status.attribute_value }}\\n                      </option>\\n                  </select>\\n                  <!-- Validation for label -->\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['mstatus'].valid && updateForm.controls['mstatus'].touched\\\">{{ titleAlert }}</div>\\n                </div>\\n              </div>\\n              \\n              <legend class=\\\"heading\\\">Contact Details</legend>\\n              <!-- Address Bars -->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-11 text-box\\\">\\n                  <label class=\\\"pull-left\\\">Address1</label>\\n                  <input class=\\\"form-control address\\\" formControlName=\\\"address1\\\">\\n                </div>\\n                \\n                <div class=\\\"form-group col-md-11 text-box\\\">\\n                  <label class=\\\"pull-left\\\">Address2</label>\\n                  <input class=\\\"form-control address\\\" formControlName=\\\"address2\\\">\\n                </div>\\n              </div>\\n              \\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-md-2 x4\\\">\\n                  <label class=\\\"pull-left\\\">City</label>\\n                  <input list=\\\"hosting-plan\\\" formControlName=\\\"city\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\n                  \\n                  <datalist id=\\\"hosting-plan\\\">\\n                    <option [value]='city' *ngFor=\\\"let city of cityArray\\\" >{{city}}</option>\\n                  </datalist>\\n                </div>\\n                \\n                <div class=\\\"form-group col-md-2 x4\\\">\\n                      <label class=\\\"pull-left\\\">State</label>\\n                      <input list=\\\"hosting-plan1\\\" formControlName=\\\"state\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\n\\n                      <datalist id=\\\"hosting-plan1\\\">\\n                          <option [value]='state' *ngFor=\\\"let state of stateArray\\\" >{{state}}</option>\\n                      </datalist>\\n                  </div>\\n\\n                  <div class=\\\"form-group col-md-2 x4\\\">\\n                      <label class=\\\"pull-left\\\">Country</label>\\n                      <input list=\\\"hosting-plan2\\\" formControlName=\\\"country\\\" class=\\\"form-control col-md-2\\\" type=\\\"text\\\">\\n\\n                      <datalist id=\\\"hosting-plan2\\\">\\n                          <option [value]='country' *ngFor=\\\"let country of countryArray\\\" >{{country}}</option>\\n                      </datalist>\\n                  </div>\\n      \\n                  <div class=\\\"form-group col-md-2 x4\\\">\\n                      <label class=\\\"pull-left\\\">Zip Code</label>\\n                      <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"zip\\\">\\n                      <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['zip'].valid && (updateForm.controls['zip'].touched || updateForm.controls['zip'].dirty)\\\">{{ titleAlert }}</div>\\n\\n                  </div>\\n              </div>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Email</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"email\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['email'].valid && updateForm.controls['email'].touched\\\">Invalid or empty email</div>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Phone</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"phone\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['phone'].valid && (updateForm.controls['phone'].touched || updateForm.controls['phone'].dirty)\\\">{{ numberAlert }}</div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Fax</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"fax\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['fax'].valid && (updateForm.controls['fax'].touched || updateForm.controls['fax'].dirty)\\\">{{ numberAlert }}</div>\\n              </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Username</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"text\\\" formControlName=\\\"username\\\" disabled=true>\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['username'].valid && updateForm.controls['username'].touched\\\">{{ titleAlert }}</div>\\n              </div>\\n  \\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                  <label class=\\\"pull-left\\\">Password</label>\\n                  <input class=\\\"form-control col-md-2\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n                  <div class=\\\"alert pull-left\\\" *ngIf=\\\"!updateForm.controls['password'].valid && updateForm.controls['password'].touched\\\">You must specify a password that's at least 8 characters.</div>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-3 x3\\\">\\n                    <!-- <form action=\\\"/upload/picture\\\" method=\\\"POST\\\" enctype=\\\"multipart/form-data\\\"> -->\\n                        <label class=\\\"pull-left\\\">Picture</label>\\n                        <input class=\\\"form-control col-md-2\\\" type=\\\"file\\\" name=\\\"picture\\\" ng2FileSelect [uploader]=\\\"uploader\\\" accept=\\\"image/*\\\" disabled>\\n                        <!-- <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"submit\\\" \\n                                (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">  -->\\n                    <!-- </form> -->\\n                </div>\\n\\n          </div>\\n\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary col-lg-offset-1 col-lg-4\\\" style=\\\"margin-top: 20px;margin-bottom: 50px\\\" value=\\\"Submit Form\\\" [disabled]=\\\"!updateForm.dirty && !updateForm.valid\\\" onclick=\\\"window.location.reload()\\\">\\n            <input type=\\\"button\\\" class=\\\"btn btn-debug col-lg-offset-1 col-lg-4\\\" style=\\\"margin-top: 20px;margin-bottom: 50px\\\" value=\\\"Submit Form\\\" routerLink=\\\"/\\\">\\n            <br>\\n      </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.html\n// module id = ../../../../../src/app/components/patient-update/patient-update.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/Rx';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PatientsService } from '../../services/patients.service';\nimport { DiscreteService } from '../../services/discrete.service';\n\n@Component({\n  selector: 'app-patient-update',\n  templateUrl: './patient-update.component.html',\n  styleUrls: ['./patient-update.component.css']\n})\nexport class PatientUpdateComponent implements OnInit {\n\n  updateForm: FormGroup;\n  post: any;                     // A property for our submitted form\n  patientToUpdate: any;\n  titleAlert: String = 'This field is required';\n  discrete: any;\n  genderArray: string[];\n  maritalStatusArray: string[];\n  cityArray: string[] = [];\n  stateArray: string[] = [];\n  countryArray: string[] = [];\n  public dateToday = new Date().toJSON().split('T')[0];\n\n\n  constructor(public http: Http,\n              private fb: FormBuilder,\n              private discreteData: DiscreteService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private patientData: PatientsService) {\n\n    this.updateForm = fb.group({\n      'id': [null],\n      'fname' : [null, Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z]*$/)])],\n      'mname' : [null, Validators.pattern(/^[a-zA-Z]*$/)],\n      'lname' : [null, Validators.compose([Validators.required, Validators.pattern(/^[a-zA-Z]*$/)])],\n      'address1' : [null],\n      'address2' : [null],\n      'ssn' : [null, Validators.compose([Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^\\d+$/)])],\n      'dob' : [null, Validators.required],\n      'gender' : [null, Validators.required],\n      'mstatus' : [null, Validators.required],\n      'city' : [null],\n      'state' : [null],\n      'country' : [null],\n      'zip' : [null, Validators.pattern(/^\\d+$/)],\n      'email':  [null,  Validators.compose([Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)])],\n      'phone' : [null, Validators.pattern(/^\\d+$/)],\n      'fax' : [null, Validators.pattern(/^\\d+$/)],\n      'username' : [null, Validators.required],\n      'password' : [null, Validators.compose([Validators.required, Validators.minLength(8)])],\n      'photo' : [null]\n      // 'validate' : ''\n    });\n  }\n\n  ngOnInit() {\n    // getting id from routes\n      const id = parseInt(this.route.snapshot.params.id);\n\n      // get patient\n    this.patientData.updatePatient(id)\n    .subscribe(patientFromDB => {\n\n      const formattedDate = patientFromDB[0].dob.split('T')[0];\n\n      this.updateForm.setValue({\n        id: patientFromDB[0].patient_id,\n        fname: patientFromDB[0].name,\n        mname: patientFromDB[0].mname,\n        lname: patientFromDB[0].lname,\n        address1: patientFromDB[0].address1,\n        address2: patientFromDB[0].address2,\n        ssn: patientFromDB[0].ssn,\n        dob: formattedDate,\n        gender: patientFromDB[0].gender,\n        mstatus: patientFromDB[0].marital_status,\n        city: patientFromDB[0].city,\n        state: patientFromDB[0].state,\n        country: patientFromDB[0].country,\n        zip: patientFromDB[0].zip_code,\n        email: patientFromDB[0].email,\n        phone: patientFromDB[0].phone,\n        fax: patientFromDB[0].fax,\n        username: patientFromDB[0].user_name,\n        password: patientFromDB[0].password,\n        photo: patientFromDB[0].photo\n      });\n    });\n    // //////////////////////////////////\n    this.discreteData.getDiscreteData().subscribe(dataFromDB => {\n      // console.log('Discrete: ', dataFromDB);\n      this.discrete = dataFromDB;\n\n      // fetching genders from DB\n      this.genderArray = this.discrete.filter(val => {\n          return val.attribute_name === 'GENDER' ? val.attribute_value : '';\n      });\n\n      // Fetch Marital status\n      this.maritalStatusArray = this.discrete.filter(val => {\n        return val.attribute_name === 'MARITAL STATUS' ? val.attribute_value : '';\n    });\n      // Fetch City, State, Country\n      for (let i = 0; i < this.discrete.length ; i++) {\n        if (this.discrete[i].attribute_name === 'CITY_LIST') {\n          this.cityArray.push(this.discrete[i].attribute_value);\n        }\n        if (this.discrete[i].attribute_name === 'STATE_LIST') {\n          this.stateArray.push(this.discrete[i].attribute_value);\n        }\n        if (this.discrete[i].attribute_name === 'COUNTRY_LIST') {\n          this.countryArray.push(this.discrete[i].attribute_value);\n        }\n      }\n      // console.log(this.stateArray);\n      // console.log(this.countryArray);\n    });\n\n\n\n  }\n\n  updatePatient(post) {\n    console.log('post: ', post);\n    this.patientToUpdate = post;\n    // console.log('patient: ', JSON.stringify(this.patient));\n\n    const headers = new Headers();\n    // headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    headers.append('Content-Type', 'application/json');\n\n    // Add city to DB\n    if (!this.cityArray.includes(post.city)) {\n    // if (this.cityArray.map(function(item){ return item.toLowerCase()}).indexOf(post.city.toLowerCase()) != -1) {\n      const city = {city: post.city};\n      // console.log('postCity: ', city);\n      this.http.post('http://localhost:3000/discrete-data/add/city', JSON.stringify(city), {headers: headers})\n        .subscribe(res => console.log('addciy: ', res));\n    }\n\n    // Add state to DB\n    if (!this.stateArray.includes(post.state)) {\n    // if (this.cityArray.map(function(item){ return item.toLowerCase()}).indexOf(post.city.toLowerCase()) != -1) {\n      const state = {state: post.state};\n      // console.log('postState: ', state);\n      this.http.post('http://localhost:3000/discrete-data/add/state', JSON.stringify(state), {headers: headers})\n        .subscribe(res =>  console.log('addstate: ', res));\n    }\n\n    // Add city to DB\n    if (!this.countryArray.includes(post.country)) {\n    // if (this.countryArray.map(function(item){ return item.toLowerCase()}).indexOf(post.country.toLowerCase()) != -1) {\n      const country = {country: post.country};\n      // console.log('postcountry: ', country);\n      this.http.post('http://localhost:3000/discrete-data/add/country', JSON.stringify(country), {headers: headers})\n        .subscribe(res => console.log('addcountry: ', res));\n    }\n\n    // Update Patient\n    const url = 'http://localhost:3000/update-patient/' + post.id;\n    this.http.put(url, JSON.stringify(this.patientToUpdate), {headers: headers})\n      .subscribe(res =>  console.log('Here!: ', res));\n\n      alert('Patient Updated Successfully!');\n      this.router.navigate(['#/']);\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/components/patient-update/patient-update.component.ts","import { Injectable } from '@angular/core';\nimport {  Http } from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class DiscreteService {\n\n  constructor(public http: Http) {\n    // console.log('Discrete Constructor');\n   }\n\n// get discrete data\n  getDiscreteData() {\n    return this.http.get('http://localhost:3000/discrete-data')\n      .map(response => response.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/services/discrete.service.ts","import { Injectable } from '@angular/core';\nimport {  Http } from \"@angular/http\";\nimport 'rxjs/Rx';\n\n\n@Injectable()\nexport class PatientsService {\n\n  constructor(public http: Http) { \n    console.log('Constructor - patients called');\n  }\n\n  // get data\n  getPatients() {\n    return this.http.get('http://localhost:3000/patients')\n      .map(response => response.json());\n    }\n\n    // update a particular patient::id\n  updatePatient(id) {\n    const url = 'http://localhost:3000/update/' + id;\n    return this.http.get(url)\n      .map(response => response.json());\n  }\n\n  // check if user exists\n  checkIfUserExists(username) {\n    const urlToCheck = 'http://localhost:3000/check/' + username;\n    return this.http.get(urlToCheck)\n               .map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/app/services/patients.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// d:/Work/INDx/project/PatientTracker/src/main.ts"],"sourceRoot":"webpack:///"}